$codeBackground = $codeBgColor
$codeColor = theme('colors.white')
$codeHighlightBackground = rgba(0, 0, 0, 66%)
$codeVerticalPadding = theme('padding.10')
// $codeHighlightBackground = linear-gradient(120deg, transparentify(#EE7752, $codeBgColor, 0.9), transparentify(#E73C7E, $codeBgColor, 0.9))

pre, code, kbd
    font-family theme('fontFamily.mono')

pre, pre[class*="language-"]
    line-height 1.4 !important
    margin-top 0
    margin-bottom 0
    padding $codeVerticalPadding theme('padding.8')
    background $codeBackground
    border-radius theme('borderRadius.lg')
    overflow auto
    align-self stretch
    color $codeColor
    code
        color $codeColor
        padding 0
        background-color transparent
        border-radius 0
        font-size 16px

code, kbd
    padding theme('padding.1') theme('padding.2')
    border-radius theme('borderRadius.default')
    font-size 0.85em
    margin 0

code
    color theme('colors.gray.700')
    background-color theme('colors.gray.300')

kbd
    color theme('colors.white')
    background-color theme('colors.black')

div[class*="language-"]
    position relative
    background $codeBackground
    border-radius theme('borderRadius.lg')
    font-family theme('fontFamily.mono')
    margin-bottom theme('margin.8')
    .highlight-lines
        user-select none
        padding-top $codeVerticalPadding
        position absolute
        top 0
        left 0
        width 100%
        line-height 1.4
        .highlighted
            background $codeHighlightBackground
    pre, pre[class*="language-"]
        background transparent
        position relative
        z-index 1
    &::before
        position absolute
        z-index 3
        top 0.8em
        right 1em
        font-size 0.75rem
        color rgba(255, 255, 255, 0.4)

for lang in $codeLang
    div{'[class~="language-' + lang + '"]'}
        &:before
            content ('' + lang)

$langMap = ('javascript' 'js'),
           ('typescript' 'ts'),
           ('markup' 'html'),
           ('markdown' 'md'),
           ('json' 'json'),
           ('ruby' 'rb'),
           ('python' 'py'),
           ('bash' 'sh'),
           ('php' 'php')

for lang in $langMap
    div{'[class~="language-' + lang[0] + '"]'}
        &:before
            content ('' + lang[1])
